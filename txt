import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.xml.sax.InputSource;

public class XMLToString {
    public static void main(String[] args) {
        String xmlString = "<root><element1>Value 1</element1><element2>Value 2</element2></root>";
        
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            InputSource inputSource = new InputSource(new StringReader(xmlString));
            Document document = builder.parse(inputSource);

            // Normalize the document to combine adjacent text nodes
            document.getDocumentElement().normalize();

            String textContent = extractTextContent(document.getDocumentElement());
            System.out.println(textContent);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static String extractTextContent(Node node) {
        StringBuilder textContent = new StringBuilder();

        if (node.getNodeType() == Node.TEXT_NODE) {
            textContent.append(node.getNodeValue());
        } else if (node.hasChildNodes()) {
            NodeList childNodes = node.getChildNodes();
            for (int i = 0; i < childNodes.getLength(); i++) {
                textContent.append(extractTextContent(childNodes.item(i)));
            }
        }

        return textContent.toString();
    }
}
