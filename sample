import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIXMLProperties;
import org.apache.poi.xwpf.usermodel.XWPFAbstractFactory;
import org.apache.xmlbeans.XmlCursor;
import org.apache.xmlbeans.XmlCursor.TokenType;
import org.openxmlformats.schemas.extendedproperties.CTProperties;

@DataProvider(name = "excelFiles")
public Object[] getExcelFiles() {
    File folder = new File(EXCEL_FOLDER_PATH);
    File[] files = folder.listFiles((dir, name) -> name.toLowerCase().endsWith(".xlsx"));

    if (files == null) {
        return new Object[0]; // Return an empty array if no files are found.
    }

    List<Object> excelFileObjects = new ArrayList<>();
    for (File file : files) {
        try (FileInputStream fis = new FileInputStream(file);
             XSSFWorkbook workbook = new XSSFWorkbook(fis)) {

            POIXMLProperties properties = workbook.getProperties();
            String internalName = getInternalName(properties);

            // Check if the internal workbook name is "Summary.xlsx"
            if (!internalName.equals("Summary.xlsx")) {
                ExcelFile excelFile = new ExcelFile(file.getName());
                excelFileObjects.add(excelFile);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    return excelFileObjects.toArray();
}

// Helper method to extract internal workbook name
private String getInternalName(POIXMLProperties properties) {
    CTProperties customProps = properties.getCustomProperties();
    if (customProps != null) {
        return customProps.getUnderlyingProperties().getTitle();
    }
    return "";
}
