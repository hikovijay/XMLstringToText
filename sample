import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFRow;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class ExcelSummarySheetUtility {
    private static Map<String, XSSFWorkbook> workbooks = new ConcurrentHashMap<>();

    public static void createSummarySheet(String excelFilePath) {
        try {
            FileInputStream fis = new FileInputStream(excelFilePath);
            XSSFWorkbook workbook = new XSSFWorkbook(fis);
            workbooks.put(excelFilePath, workbook);

            String summarySheetName = "Summary";
            XSSFSheet summarySheet = workbook.getSheet(summarySheetName);
            if (summarySheet == null) {
                // If the summary sheet doesn't exist, create it.
                summarySheet = workbook.createSheet(summarySheetName);
                // Add a header row for the summary sheet.
                XSSFRow headerRow = summarySheet.createRow(0);
                headerRow.createCell(0).setCellValue("Test Name");
                headerRow.createCell(1).setCellValue("Test Result");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void writeTestResult(String excelFilePath, String test_name, String test_result) {
        try {
            XSSFWorkbook workbook = workbooks.get(excelFilePath);
            if (workbook == null) {
                System.out.println("Workbook not found for file: " + excelFilePath);
                return;
            }

            XSSFSheet summarySheet = workbook.getSheet("Summary");

            // Clear existing rows in the summary sheet
            while (summarySheet.getLastRowNum() >= 1) { // Leave the header row
                summarySheet.removeRow(summarySheet.getRow(1));
            }

            // Add code to write test results to the summary sheet.
            int lastRow = summarySheet.getLastRowNum();
            XSSFRow newRow = summarySheet.createRow(lastRow + 1);
            newRow.createCell(0).setCellValue(test_name);
            newRow.createCell(1).setCellValue(test_result);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void closeWorkbooks() {
        for (XSSFWorkbook workbook : workbooks.values()) {
            try {
                FileOutputStream fos = new FileOutputStream(workbook.getFile());
                workbook.write(fos);
                fos.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
