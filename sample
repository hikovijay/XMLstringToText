import org.testng.*;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.Listeners;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Listeners(CustomExcelResultListener.class)
public class TestClass {
    @Test
    public void testMethod1() {
        // Your test code here
        String value1 = "Value1";
        String value2 = "Value2";
        String value3 = "Value3";
        CustomExcelResultListener.setTestValues(value1, value2, value3);
    }

    @Test
    public void testMethod2() {
        // Your test code here
        String value1 = "AnotherValue1";
        String value2 = "AnotherValue2";
        String value3 = "AnotherValue3";
        CustomExcelResultListener.setTestValues(value1, value2, value3);
    }

    // Add more test methods as needed
}

class CustomExcelResultListener implements ITestListener, ISuiteListener {
    private List<XSSFWorkbook> workbooks = new ArrayList<>();
    private int testIndex = 0;
    private static ThreadLocal<String[]> testValuesThreadLocal = ThreadLocal.withInitial(() -> new String[3]);

    public static void setTestValues(String value1, String value2, String value3) {
        String[] values = new String[3];
        values[0] = value1;
        values[1] = value2;
        values[2] = value3;
        testValuesThreadLocal.set(values);
    }

    @Override
    public void onStart(ISuite suite) {
        // No action needed here
    }

    @Override
    public void onFinish(ISuite suite) {
        // Close all workbooks after all tests have executed
        for (XSSFWorkbook workbook : workbooks) {
            try (FileOutputStream fos = new FileOutputStream("TestResult_" + testIndex + ".xlsx")) {
                workbook.write(fos);
            } catch (IOException e) {
                e.printStackTrace();
            }
            testIndex++;
        }
    }

    @Override
    public void onTestStart(ITestResult result) {
        // Create a new workbook for each test
        XSSFWorkbook workbook = new XSSFWorkbook();
        workbooks.add(workbook);
    }

    @Override
    public void onTestSuccess(ITestResult result) {
        recordResult(result);
    }

    @Override
    public void onTestFailure(ITestResult result) {
        recordResult(result);
    }

    @Override
    public void onTestSkipped(ITestResult result) {
        recordResult(result);
    }

    @Override
    public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
        recordResult(result);
    }

    private void recordResult(ITestResult result) {
        int lastWorkbookIndex = workbooks.size() - 1;
        XSSFWorkbook workbook = workbooks.get(lastWorkbookIndex);
        XSSFSheet sheet = workbook.createSheet(result.getName());

        // Record the result in the sheet
        Row row = sheet.createRow(0);
        Cell cell = row.createCell(0);

        String[] testValues = testValuesThreadLocal.get();
        testValuesThreadLocal.remove();

        if (result.getStatus() == ITestResult.SUCCESS) {
            cell.setCellValue("PASS");
        } else if (result.getStatus() == ITestResult.FAILURE) {
            cell.setCellValue("FAIL");
        } else {
            cell.setCellValue("SKIP");
        }

        // Record the test values in separate cells
        for (int i = 0; i < 3; i++) {
            row.createCell(i + 1).setCellValue(testValues[i]);
        }
    }

    // Implement other methods from ITestListener if needed
}
