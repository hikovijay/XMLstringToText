import java.io.*;
import java.nio.file.*;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

public class UnzipExcelAndExeFilesExample {

    private static final int BUFFER_SIZE = 4096;

    public static void main(String[] args) {
        String zipFilePath = "path/to/your/archive.zip";
        String destDirectoryName = "destination_folder"; // Change this to your desired destination folder name

        File destDirectory = new File(destDirectoryName);
        if (!destDirectory.exists()) {
            if (!destDirectory.mkdirs()) {
                System.out.println("Failed to create destination directory.");
                return;
            }
        }

        try (ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipFilePath))) {
            ZipEntry entry = zipInputStream.getNextEntry();

            while (entry != null) {
                String entryName = entry.getName();
                String filePath = Paths.get(destDirectoryName, entryName).toString();

                if (!entry.isDirectory() && (entryName.endsWith(".xls") || entryName.endsWith(".xlsx") || entryName.endsWith(".exe"))) {
                    // Ensure that the parent directories exist
                    File parentDir = new File(filePath).getParentFile();
                    if (!parentDir.exists() && !parentDir.mkdirs()) {
                        System.out.println("Failed to create parent directory for: " + filePath);
                        continue; // Skip this entry
                    }

                    try (BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(filePath))) {
                        byte[] bytesIn = new byte[BUFFER_SIZE];
                        int read;
                        while ((read = zipInputStream.read(bytesIn)) != -1) {
                            bos.write(bytesIn, 0, read);
                        }
                    }
                }

                zipInputStream.closeEntry();
                entry = zipInputStream.getNextEntry();
            }

            System.out.println("Excel and .exe files extracted successfully.");

            // Move files from subdirectory to parent directory
            Path subdirectoryPath = Paths.get(destDirectoryName);
            try (DirectoryStream<Path> stream = Files.newDirectoryStream(subdirectoryPath)) {
                for (Path entry : stream) {
                    Files.move(entry, Paths.get("..", "..", entry.getFileName().toString()));
                }
            }
            Files.delete(subdirectoryPath);

        } catch (IOException e) {
            e.printStackTrace();
            // Handle specific exceptions if needed
        }

        // Delete the ZIP file after successful extraction
        File zipFile = new File(zipFilePath);
        if (zipFile.delete()) {
            System.out.println("ZIP file deleted successfully.");
        } else {
            System.out.println("Failed to delete ZIP file.");
        }
    }
}
