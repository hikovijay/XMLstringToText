import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.StringReader;

public class XMLToDOM {
    public static void main(String[] args) {
        try {
            // Your XML content as a string
            String xmlString = "<root><item><name>Item 1</name><price>10.00</price></item><item><name>Item 2</name><price>15.00</price></item></root>";

            // Create a DocumentBuilderFactory
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();

            // Parse the XML string to create a DOM Document
            Document document = builder.parse(new InputSource(new StringReader(xmlString)));

            // Print the XML content in a readable format
            printDOM(document.getDocumentElement(), "");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Recursively print the DOM structure in a readable format
    public static void printDOM(Element element, String indent) {
        System.out.println(indent + "<" + element.getTagName() + ">");
        NodeList childNodes = element.getChildNodes();
        for (int i = 0; i < childNodes.getLength(); i++) {
            if (childNodes.item(i) instanceof Element) {
                printDOM((Element) childNodes.item(i), indent + "  ");
            } else if (childNodes.item(i).getNodeType() == org.w3c.dom.Node.TEXT_NODE) {
                String text = childNodes.item(i).getTextContent().trim();
                if (!text.isEmpty()) {
                    System.out.println(indent + "  " + text);
                }
            }
        }
        System.out.println(indent + "</" + element.getTagName() + ">");
    }
}
